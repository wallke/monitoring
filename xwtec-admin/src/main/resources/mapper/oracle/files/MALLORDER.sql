/*
 Navicat Premium Data Transfer

 Source Server         : mallorder
 Source Server Type    : Oracle
 Source Server Version : 112010
 Source Host           : 192.168.23.127
 Source Schema         : MALLORDER

 Target Server Type    : Oracle
 Target Server Version : 112010
 File Encoding         : utf-8

 Date: 09/07/2016 13:48:22 PM
*/

-- ----------------------------
--  Table structure for T_ALL_QUARTZJOB_INFO
-- ----------------------------
DROP TABLE "MALLORDER"."T_ALL_QUARTZJOB_INFO";
CREATE TABLE "T_ALL_QUARTZJOB_INFO" (   "JOB_NAME" VARCHAR2(20BYTE), "JOB_GROUP" VARCHAR2(20BYTE), "JOB_EXPR" VARCHAR2(20BYTE), "JOB_DESC" VARCHAR2(100BYTE), "JOB_ISRUN" VARCHAR2(1BYTE), "JOB_CLASS" VARCHAR2(80BYTE));
COMMENT ON COLUMN "T_ALL_QUARTZJOB_INFO"."JOB_NAME" IS '任务名称';
COMMENT ON COLUMN "T_ALL_QUARTZJOB_INFO"."JOB_GROUP" IS '任务群组名称';
COMMENT ON COLUMN "T_ALL_QUARTZJOB_INFO"."JOB_EXPR" IS 'quartz表达式';
COMMENT ON COLUMN "T_ALL_QUARTZJOB_INFO"."JOB_DESC" IS '任务描述';
COMMENT ON COLUMN "T_ALL_QUARTZJOB_INFO"."JOB_ISRUN" IS '是否需要运行任务1：运行；0：不运行';
COMMENT ON COLUMN "T_ALL_QUARTZJOB_INFO"."JOB_CLASS" IS 'JOB类的路径';

-- ----------------------------
--  Records of T_ALL_QUARTZJOB_INFO
-- ----------------------------
INSERT INTO "MALLORDER"."T_ALL_QUARTZJOB_INFO" VALUES ('job2', 'testGroup', '*/5 * * * * ?', '测试', '1', 'com.xwtech.jobs.jobs.Job1');
INSERT INTO "MALLORDER"."T_ALL_QUARTZJOB_INFO" VALUES ('job1', 'testGroup', '*/10 * * * * ?', '测试', '1', null);
COMMIT;

-- ----------------------------
--  Table structure for T_JOB_INFO
-- ----------------------------
DROP TABLE "MALLORDER"."T_JOB_INFO";
CREATE TABLE "T_JOB_INFO" (   "JOB_NAME" VARCHAR2(10BYTE), "JOB_EXPR" VARCHAR2(20BYTE), "JOB_DESC" VARCHAR2(50BYTE));
COMMENT ON COLUMN "T_JOB_INFO"."JOB_NAME" IS '任务名称';
COMMENT ON COLUMN "T_JOB_INFO"."JOB_EXPR" IS 'quratz表达式';
COMMENT ON COLUMN "T_JOB_INFO"."JOB_DESC" IS '任务描述';

-- ----------------------------
--  Records of T_JOB_INFO
-- ----------------------------
INSERT INTO "MALLORDER"."T_JOB_INFO" VALUES ('MyJob1', '111', '描述');
COMMIT;

-- ----------------------------
--  Table structure for QRTZ_JOB_DETAILS
-- ----------------------------
DROP TABLE "MALLORDER"."QRTZ_JOB_DETAILS";
CREATE TABLE "QRTZ_JOB_DETAILS" (   "SCHED_NAME" VARCHAR2(120BYTE) NOT NULL, "JOB_NAME" VARCHAR2(200BYTE) NOT NULL, "JOB_GROUP" VARCHAR2(200BYTE) NOT NULL, "DESCRIPTION" VARCHAR2(250BYTE), "JOB_CLASS_NAME" VARCHAR2(250BYTE) NOT NULL, "IS_DURABLE" VARCHAR2(1BYTE) NOT NULL, "IS_NONCONCURRENT" VARCHAR2(1BYTE) NOT NULL, "IS_UPDATE_DATA" VARCHAR2(1BYTE) NOT NULL, "REQUESTS_RECOVERY" VARCHAR2(1BYTE) NOT NULL, "JOB_DATA" BLOB);

-- ----------------------------
--  Records of QRTZ_JOB_DETAILS
-- ----------------------------
INSERT INTO "MALLORDER"."QRTZ_JOB_DETAILS" VALUES ('MyClusteredScheduler', 'job1', 'testGroup', null, 'com.xwtech.jobs.init.MainJob', '0', '0', '0', '0', HEXTORAW('aced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007800'));
INSERT INTO "MALLORDER"."QRTZ_JOB_DETAILS" VALUES ('MyClusteredScheduler', 'MyJob1', 'jobs', null, 'com.xwtech.jobs.init.MainJob', '0', '0', '0', '0', HEXTORAW('aced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007800'));
INSERT INTO "MALLORDER"."QRTZ_JOB_DETAILS" VALUES ('MyClusteredScheduler', 'job2', 'testGroup', null, 'com.xwtech.jobs.jobs.Job1', '0', '0', '0', '0', HEXTORAW('aced0005737200156f72672e71756172747a2e4a6f62446174614d61709fb083e8bfa9b0cb020000787200266f72672e71756172747a2e7574696c732e537472696e674b65794469727479466c61674d61708208e8c3fbc55d280200015a0013616c6c6f77735472616e7369656e74446174617872001d6f72672e71756172747a2e7574696c732e4469727479466c61674d617013e62ead28760ace0200025a000564697274794c00036d617074000f4c6a6176612f7574696c2f4d61703b787000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007800'));
COMMIT;

-- ----------------------------
--  Table structure for QRTZ_TRIGGERS
-- ----------------------------
DROP TABLE "MALLORDER"."QRTZ_TRIGGERS";
CREATE TABLE "QRTZ_TRIGGERS" (   "SCHED_NAME" VARCHAR2(120BYTE) NOT NULL, "TRIGGER_NAME" VARCHAR2(200BYTE) NOT NULL, "TRIGGER_GROUP" VARCHAR2(200BYTE) NOT NULL, "JOB_NAME" VARCHAR2(200BYTE) NOT NULL, "JOB_GROUP" VARCHAR2(200BYTE) NOT NULL, "DESCRIPTION" VARCHAR2(250BYTE), "NEXT_FIRE_TIME" NUMBER(13,0), "PREV_FIRE_TIME" NUMBER(13,0), "PRIORITY" NUMBER(13,0), "TRIGGER_STATE" VARCHAR2(16BYTE) NOT NULL, "TRIGGER_TYPE" VARCHAR2(8BYTE) NOT NULL, "START_TIME" NUMBER(13,0) NOT NULL, "END_TIME" NUMBER(13,0), "CALENDAR_NAME" VARCHAR2(200BYTE), "MISFIRE_INSTR" NUMBER(2,0), "JOB_DATA" BLOB);

-- ----------------------------
--  Records of QRTZ_TRIGGERS
-- ----------------------------
INSERT INTO "MALLORDER"."QRTZ_TRIGGERS" VALUES ('MyClusteredScheduler', 'job1', 'testGroup', 'job1', 'testGroup', null, '1473038030000', '1473038020000', '5', 'ACQUIRED', 'CRON', '1472808965000', '0', null, '0', null);
INSERT INTO "MALLORDER"."QRTZ_TRIGGERS" VALUES ('MyClusteredScheduler', 'MyJob1Tiger', 'triggerGroup', 'MyJob1', 'jobs', null, '1473038030000', '1473038020000', '5', 'WAITING', 'CRON', '1473037825000', '0', null, '0', null);
INSERT INTO "MALLORDER"."QRTZ_TRIGGERS" VALUES ('MyClusteredScheduler', 'job2', 'testGroup', 'job2', 'testGroup', null, '1473038030000', '1473038020000', '5', 'WAITING', 'CRON', '1472808970000', '0', null, '0', null);
COMMIT;

-- ----------------------------
--  Table structure for QRTZ_SIMPLE_TRIGGERS
-- ----------------------------
DROP TABLE "MALLORDER"."QRTZ_SIMPLE_TRIGGERS";
CREATE TABLE "QRTZ_SIMPLE_TRIGGERS" (   "SCHED_NAME" VARCHAR2(120BYTE) NOT NULL, "TRIGGER_NAME" VARCHAR2(200BYTE) NOT NULL, "TRIGGER_GROUP" VARCHAR2(200BYTE) NOT NULL, "REPEAT_COUNT" NUMBER(7,0) NOT NULL, "REPEAT_INTERVAL" NUMBER(12,0) NOT NULL, "TIMES_TRIGGERED" NUMBER(10,0) NOT NULL);

-- ----------------------------
--  Table structure for QRTZ_CRON_TRIGGERS
-- ----------------------------
DROP TABLE "MALLORDER"."QRTZ_CRON_TRIGGERS";
CREATE TABLE "QRTZ_CRON_TRIGGERS" (   "SCHED_NAME" VARCHAR2(120BYTE) NOT NULL, "TRIGGER_NAME" VARCHAR2(200BYTE) NOT NULL, "TRIGGER_GROUP" VARCHAR2(200BYTE) NOT NULL, "CRON_EXPRESSION" VARCHAR2(120BYTE) NOT NULL, "TIME_ZONE_ID" VARCHAR2(80BYTE));

-- ----------------------------
--  Records of QRTZ_CRON_TRIGGERS
-- ----------------------------
INSERT INTO "MALLORDER"."QRTZ_CRON_TRIGGERS" VALUES ('MyClusteredScheduler', 'job1', 'testGroup', '*/10 * * * * ?', 'Asia/Shanghai');
INSERT INTO "MALLORDER"."QRTZ_CRON_TRIGGERS" VALUES ('MyClusteredScheduler', 'MyJob1Tiger', 'triggerGroup', '*/10 * * * * ?', 'Asia/Shanghai');
INSERT INTO "MALLORDER"."QRTZ_CRON_TRIGGERS" VALUES ('MyClusteredScheduler', 'job2', 'testGroup', '*/10 * * * * ?', 'Asia/Shanghai');
COMMIT;

-- ----------------------------
--  Table structure for QRTZ_SIMPROP_TRIGGERS
-- ----------------------------
DROP TABLE "MALLORDER"."QRTZ_SIMPROP_TRIGGERS";
CREATE TABLE "QRTZ_SIMPROP_TRIGGERS" (   "SCHED_NAME" VARCHAR2(120BYTE) NOT NULL, "TRIGGER_NAME" VARCHAR2(200BYTE) NOT NULL, "TRIGGER_GROUP" VARCHAR2(200BYTE) NOT NULL, "STR_PROP_1" VARCHAR2(512BYTE), "STR_PROP_2" VARCHAR2(512BYTE), "STR_PROP_3" VARCHAR2(512BYTE), "INT_PROP_1" NUMBER(10,0), "INT_PROP_2" NUMBER(10,0), "LONG_PROP_1" NUMBER(13,0), "LONG_PROP_2" NUMBER(13,0), "DEC_PROP_1" NUMBER(13,4), "DEC_PROP_2" NUMBER(13,4), "BOOL_PROP_1" VARCHAR2(1BYTE), "BOOL_PROP_2" VARCHAR2(1BYTE));

-- ----------------------------
--  Table structure for QRTZ_BLOB_TRIGGERS
-- ----------------------------
DROP TABLE "MALLORDER"."QRTZ_BLOB_TRIGGERS";
CREATE TABLE "QRTZ_BLOB_TRIGGERS" (   "SCHED_NAME" VARCHAR2(120BYTE) NOT NULL, "TRIGGER_NAME" VARCHAR2(200BYTE) NOT NULL, "TRIGGER_GROUP" VARCHAR2(200BYTE) NOT NULL, "BLOB_DATA" BLOB);

-- ----------------------------
--  Table structure for QRTZ_CALENDARS
-- ----------------------------
DROP TABLE "MALLORDER"."QRTZ_CALENDARS";
CREATE TABLE "QRTZ_CALENDARS" (   "SCHED_NAME" VARCHAR2(120BYTE) NOT NULL, "CALENDAR_NAME" VARCHAR2(200BYTE) NOT NULL, "CALENDAR" BLOB NOT NULL);

-- ----------------------------
--  Table structure for QRTZ_PAUSED_TRIGGER_GRPS
-- ----------------------------
DROP TABLE "MALLORDER"."QRTZ_PAUSED_TRIGGER_GRPS";
CREATE TABLE "QRTZ_PAUSED_TRIGGER_GRPS" (   "SCHED_NAME" VARCHAR2(120BYTE) NOT NULL, "TRIGGER_GROUP" VARCHAR2(200BYTE) NOT NULL);

-- ----------------------------
--  Table structure for QRTZ_FIRED_TRIGGERS
-- ----------------------------
DROP TABLE "MALLORDER"."QRTZ_FIRED_TRIGGERS";
CREATE TABLE "QRTZ_FIRED_TRIGGERS" (   "SCHED_NAME" VARCHAR2(120BYTE) NOT NULL, "ENTRY_ID" VARCHAR2(95BYTE) NOT NULL, "TRIGGER_NAME" VARCHAR2(200BYTE) NOT NULL, "TRIGGER_GROUP" VARCHAR2(200BYTE) NOT NULL, "INSTANCE_NAME" VARCHAR2(200BYTE) NOT NULL, "FIRED_TIME" NUMBER(13,0) NOT NULL, "SCHED_TIME" NUMBER(13,0) NOT NULL, "PRIORITY" NUMBER(13,0) NOT NULL, "STATE" VARCHAR2(16BYTE) NOT NULL, "JOB_NAME" VARCHAR2(200BYTE), "JOB_GROUP" VARCHAR2(200BYTE), "IS_NONCONCURRENT" VARCHAR2(1BYTE), "REQUESTS_RECOVERY" VARCHAR2(1BYTE));

-- ----------------------------
--  Records of QRTZ_FIRED_TRIGGERS
-- ----------------------------
INSERT INTO "MALLORDER"."QRTZ_FIRED_TRIGGERS" VALUES ('MyClusteredScheduler', 'a121473037924558', 'job1', 'testGroup', 'a12', '1473038020096', '1473038030000', '5', 'ACQUIRED', null, null, '0', '0');
COMMIT;

-- ----------------------------
--  Table structure for QRTZ_SCHEDULER_STATE
-- ----------------------------
DROP TABLE "MALLORDER"."QRTZ_SCHEDULER_STATE";
CREATE TABLE "QRTZ_SCHEDULER_STATE" (   "SCHED_NAME" VARCHAR2(120BYTE) NOT NULL, "INSTANCE_NAME" VARCHAR2(200BYTE) NOT NULL, "LAST_CHECKIN_TIME" NUMBER(13,0) NOT NULL, "CHECKIN_INTERVAL" NUMBER(13,0) NOT NULL);

-- ----------------------------
--  Records of QRTZ_SCHEDULER_STATE
-- ----------------------------
INSERT INTO "MALLORDER"."QRTZ_SCHEDULER_STATE" VALUES ('MyClusteredScheduler', 'a12', '1473038023186', '7500');
COMMIT;

-- ----------------------------
--  Table structure for QRTZ_LOCKS
-- ----------------------------
DROP TABLE "MALLORDER"."QRTZ_LOCKS";
CREATE TABLE "QRTZ_LOCKS" (   "SCHED_NAME" VARCHAR2(120BYTE) NOT NULL, "LOCK_NAME" VARCHAR2(40BYTE) NOT NULL);

-- ----------------------------
--  Records of QRTZ_LOCKS
-- ----------------------------
INSERT INTO "MALLORDER"."QRTZ_LOCKS" VALUES ('MyClusteredScheduler', 'STATE_ACCESS');
INSERT INTO "MALLORDER"."QRTZ_LOCKS" VALUES ('MyClusteredScheduler', 'TRIGGER_ACCESS');
COMMIT;

-- ----------------------------
--  Table structure for T_USER
-- ----------------------------
DROP TABLE "MALLORDER"."T_USER";
CREATE TABLE "T_USER" (   "F_ID" NUMBER NOT NULL, "F_NAME" VARCHAR2(20BYTE), "F_LOGIN_NAME" VARCHAR2(20BYTE) NOT NULL, "F_PASSWORD" VARCHAR2(50BYTE) NOT NULL, "F_SALT" VARCHAR2(50BYTE) DEFAULT 1  NOT NULL, "F_LOCKED" NUMBER DEFAULT 0  , "F_CREATE_TIME" VARCHAR2(20BYTE));
COMMENT ON COLUMN "T_USER"."F_LOGIN_NAME" IS '用户名';
COMMENT ON COLUMN "T_USER"."F_PASSWORD" IS '密码';

-- ----------------------------
--  Records of T_USER
-- ----------------------------
INSERT INTO "MALLORDER"."T_USER" VALUES ('1', '姓名1', 'admin', '20e3e4976998a8abafa3dd401c9e8a81', '3b83c03c477f11f21614388c7810045b', '0', '20160826121212');
COMMIT;

-- ----------------------------
--  Table structure for T_ROLE
-- ----------------------------
DROP TABLE "MALLORDER"."T_ROLE";
CREATE TABLE "T_ROLE" (   "F_ID" NUMBER NOT NULL, "F_NAME" VARCHAR2(20BYTE) NOT NULL, "F_DESCRIPTION" VARCHAR2(200BYTE), "F_AVAILABLE" NUMBER, "F_CODE" VARCHAR2(20BYTE) NOT NULL);

-- ----------------------------
--  Records of T_ROLE
-- ----------------------------
INSERT INTO "MALLORDER"."T_ROLE" VALUES ('1', '超级管理员', '测试1', '1', 'superamdin');
COMMIT;

-- ----------------------------
--  Table structure for T_RESOURCE
-- ----------------------------
DROP TABLE "MALLORDER"."T_RESOURCE";
CREATE TABLE "T_RESOURCE" (   "F_ID" NUMBER NOT NULL, "F_NAME" VARCHAR2(50BYTE) NOT NULL, "F_TYPE" VARCHAR2(10BYTE) NOT NULL, "F_URL" VARCHAR2(255BYTE), "F_PARENT_ID" VARCHAR2(20BYTE), "F_PARENT_IDS" VARCHAR2(255BYTE), "F_PERMISSION" VARCHAR2(200BYTE), "F_AVAILABLE" NUMBER, "F_APP_ID" NUMBER);

-- ----------------------------
--  Records of T_RESOURCE
-- ----------------------------
INSERT INTO "MALLORDER"."T_RESOURCE" VALUES ('1', '系统管理', 'menu', 'menus', '0', '0/', 'sys:*', '1', '1');
INSERT INTO "MALLORDER"."T_RESOURCE" VALUES ('3', '新增', 'button', null, '93', '0/1/82/93/', 'user:create', '0', null);
INSERT INTO "MALLORDER"."T_RESOURCE" VALUES ('5', '删除', 'button', null, '93', '0/1/82/93/', 'user:delete', '0', null);
INSERT INTO "MALLORDER"."T_RESOURCE" VALUES ('4', '修改', 'button', null, '93', '0/1/82/93/', 'user:update', '0', null);
INSERT INTO "MALLORDER"."T_RESOURCE" VALUES ('6', '查看', 'button', null, '93', '0/1/82/93/', 'user:view', '0', null);
INSERT INTO "MALLORDER"."T_RESOURCE" VALUES ('2', '用户管理', 'menu', 'user', '1', '0/1/', 'user:*', '1', '1');
COMMIT;

-- ----------------------------
--  Table structure for T_ORGANIZATION
-- ----------------------------
DROP TABLE "MALLORDER"."T_ORGANIZATION";
CREATE TABLE "T_ORGANIZATION" (   "F_ID" NUMBER NOT NULL, "F_NAME" VARCHAR2(200BYTE) NOT NULL, "F_CODE" VARCHAR2(20BYTE), "F_DESCRIPTION" VARCHAR2(500BYTE), "F_PARENT_ID" NUMBER, "F_PARENT_IDS" VARCHAR2(255BYTE));

-- ----------------------------
--  Records of T_ORGANIZATION
-- ----------------------------
INSERT INTO "MALLORDER"."T_ORGANIZATION" VALUES ('1', '总部运营', 'HQ', null, '0', '0/');
COMMIT;

-- ----------------------------
--  Table structure for T_APP
-- ----------------------------
DROP TABLE "MALLORDER"."T_APP";
CREATE TABLE "T_APP" (   "F_ID" NUMBER NOT NULL, "F_NAME" VARCHAR2(200BYTE) NOT NULL, "F_CODE" VARCHAR2(50BYTE) NOT NULL, "F_SECRET" VARCHAR2(100BYTE) NOT NULL, "F_CREATE_TIME" VARCHAR2(20BYTE), "F_DESCRIPTION" VARCHAR2(200BYTE), "F_AVAILABLE" NUMBER, "F_URL" VARCHAR2(255BYTE) NOT NULL);

-- ----------------------------
--  Records of T_APP
-- ----------------------------
INSERT INTO "MALLORDER"."T_APP" VALUES ('2', '订单中心', '42031d53c74c4f1aa5568ebb753c5152', '42031d53c74c4f1aa5568ebb753c515f', null, null, '1', '1');
INSERT INTO "MALLORDER"."T_APP" VALUES ('1', '授权中心', '42031d53c74c4f1aa5568ebb753c5151', '42031d53c74c4f1aa5568ebb753c515f', null, 'updateAppTest', '1', '1');
COMMIT;

-- ----------------------------
--  Table structure for T_ROLE_RESOURCE
-- ----------------------------
DROP TABLE "MALLORDER"."T_ROLE_RESOURCE";
CREATE TABLE "T_ROLE_RESOURCE" (   "F_ROLE_ID" NUMBER NOT NULL, "F_RESOURCE_ID" NUMBER NOT NULL);

-- ----------------------------
--  Records of T_ROLE_RESOURCE
-- ----------------------------
INSERT INTO "MALLORDER"."T_ROLE_RESOURCE" VALUES ('1', '1');
INSERT INTO "MALLORDER"."T_ROLE_RESOURCE" VALUES ('1', '2');
INSERT INTO "MALLORDER"."T_ROLE_RESOURCE" VALUES ('1', '3');
INSERT INTO "MALLORDER"."T_ROLE_RESOURCE" VALUES ('1', '4');
INSERT INTO "MALLORDER"."T_ROLE_RESOURCE" VALUES ('1', '5');
COMMIT;

-- ----------------------------
--  Table structure for T_USER_ROLE
-- ----------------------------
DROP TABLE "MALLORDER"."T_USER_ROLE";
CREATE TABLE "T_USER_ROLE" (   "F_USER_ID" NUMBER NOT NULL, "F_ROLE_ID" NUMBER NOT NULL);

-- ----------------------------
--  Records of T_USER_ROLE
-- ----------------------------
INSERT INTO "MALLORDER"."T_USER_ROLE" VALUES ('1', '1');
COMMIT;

-- ----------------------------
--  Table structure for T_USER_ORGANIZATION
-- ----------------------------
DROP TABLE "MALLORDER"."T_USER_ORGANIZATION";
CREATE TABLE "T_USER_ORGANIZATION" (   "F_USER_ID" NUMBER NOT NULL, "F_PRGANIZATION_ID" NUMBER NOT NULL);

-- ----------------------------
--  Records of T_USER_ORGANIZATION
-- ----------------------------
INSERT INTO "MALLORDER"."T_USER_ORGANIZATION" VALUES ('1', '1');
COMMIT;

-- ----------------------------
--  Sequence structure for T_APP_ID_SEQ
-- ----------------------------
DROP SEQUENCE "MALLORDER"."T_APP_ID_SEQ";;
CREATE SEQUENCE "T_APP_ID_SEQ" INCREMENT BY 1 START WITH 32 MAXVALUE 9999999999999 MINVALUE 1 NOCYCLE NOCACHE ORDER;

-- ----------------------------
--  Sequence structure for T_ORGANIZATION_ID_SEQ
-- ----------------------------
DROP SEQUENCE "MALLORDER"."T_ORGANIZATION_ID_SEQ";;
CREATE SEQUENCE "T_ORGANIZATION_ID_SEQ" INCREMENT BY 1 START WITH 10 MAXVALUE 9999999999999 MINVALUE 1 NOCYCLE NOCACHE ORDER;

-- ----------------------------
--  Sequence structure for T_RESOURCE_ID_SEQ
-- ----------------------------
DROP SEQUENCE "MALLORDER"."T_RESOURCE_ID_SEQ";;
CREATE SEQUENCE "T_RESOURCE_ID_SEQ" INCREMENT BY 1 START WITH 23 MAXVALUE 9999999999999 MINVALUE 1 NOCYCLE NOCACHE ORDER;

-- ----------------------------
--  Sequence structure for T_ROLE_ID_SEQ
-- ----------------------------
DROP SEQUENCE "MALLORDER"."T_ROLE_ID_SEQ";;
CREATE SEQUENCE "T_ROLE_ID_SEQ" INCREMENT BY 1 START WITH 19 MAXVALUE 9999999999999 MINVALUE 1 NOCYCLE NOCACHE ORDER;

-- ----------------------------
--  Sequence structure for T_USER_ID_SEQ
-- ----------------------------
DROP SEQUENCE "MALLORDER"."T_USER_ID_SEQ";;
CREATE SEQUENCE "T_USER_ID_SEQ" INCREMENT BY 1 START WITH 15 MAXVALUE 9999999999999 MINVALUE 1 NOCYCLE NOCACHE ORDER;

-- ----------------------------
--  Primary key structure for table QRTZ_JOB_DETAILS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_JOB_DETAILS" ADD CONSTRAINT "QRTZ_JOB_DETAILS_PK" PRIMARY KEY("SCHED_NAME","JOB_NAME","JOB_GROUP");

-- ----------------------------
--  Checks structure for table QRTZ_JOB_DETAILS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_JOB_DETAILS" ADD CONSTRAINT "SYS_C0043831" CHECK ("SCHED_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043832" CHECK ("JOB_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043833" CHECK ("JOB_GROUP" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043834" CHECK ("JOB_CLASS_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043835" CHECK ("IS_DURABLE" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043836" CHECK ("IS_NONCONCURRENT" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043837" CHECK ("IS_UPDATE_DATA" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043838" CHECK ("REQUESTS_RECOVERY" IS NOT NULL) ENABLE;

-- ----------------------------
--  Indexes structure for table QRTZ_JOB_DETAILS
-- ----------------------------
CREATE INDEX MALLORDER.IDX_QRTZ_J_GRP ON MALLORDER.QRTZ_JOB_DETAILS (SCHED_NAME ASC, JOB_GROUP ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);
CREATE INDEX MALLORDER.IDX_QRTZ_J_REQ_RECOVERY ON MALLORDER.QRTZ_JOB_DETAILS (SCHED_NAME ASC, REQUESTS_RECOVERY ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);

-- ----------------------------
--  Primary key structure for table QRTZ_TRIGGERS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_TRIGGERS" ADD CONSTRAINT "QRTZ_TRIGGERS_PK" PRIMARY KEY("SCHED_NAME","TRIGGER_NAME","TRIGGER_GROUP");

-- ----------------------------
--  Checks structure for table QRTZ_TRIGGERS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_TRIGGERS" ADD CONSTRAINT "SYS_C0043840" CHECK ("SCHED_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043841" CHECK ("TRIGGER_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043842" CHECK ("TRIGGER_GROUP" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043843" CHECK ("JOB_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043844" CHECK ("JOB_GROUP" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043845" CHECK ("TRIGGER_STATE" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043846" CHECK ("TRIGGER_TYPE" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043847" CHECK ("START_TIME" IS NOT NULL) ENABLE;

-- ----------------------------
--  Indexes structure for table QRTZ_TRIGGERS
-- ----------------------------
CREATE INDEX MALLORDER.IDX_QRTZ_T_C ON MALLORDER.QRTZ_TRIGGERS (SCHED_NAME ASC, CALENDAR_NAME ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);
CREATE INDEX MALLORDER.IDX_QRTZ_T_G ON MALLORDER.QRTZ_TRIGGERS (SCHED_NAME ASC, TRIGGER_GROUP ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);
CREATE INDEX MALLORDER.IDX_QRTZ_T_J ON MALLORDER.QRTZ_TRIGGERS (SCHED_NAME ASC, JOB_NAME ASC, JOB_GROUP ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);
CREATE INDEX MALLORDER.IDX_QRTZ_T_JG ON MALLORDER.QRTZ_TRIGGERS (SCHED_NAME ASC, JOB_GROUP ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);
CREATE INDEX MALLORDER.IDX_QRTZ_T_NEXT_FIRE_TIME ON MALLORDER.QRTZ_TRIGGERS (SCHED_NAME ASC, NEXT_FIRE_TIME ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);
CREATE INDEX MALLORDER.IDX_QRTZ_T_NFT_MISFIRE ON MALLORDER.QRTZ_TRIGGERS (SCHED_NAME ASC, MISFIRE_INSTR ASC, NEXT_FIRE_TIME ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);
CREATE INDEX MALLORDER.IDX_QRTZ_T_NFT_ST ON MALLORDER.QRTZ_TRIGGERS (SCHED_NAME ASC, TRIGGER_STATE ASC, NEXT_FIRE_TIME ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);
CREATE INDEX MALLORDER.IDX_QRTZ_T_NFT_ST_MISFIRE ON MALLORDER.QRTZ_TRIGGERS (SCHED_NAME ASC, MISFIRE_INSTR ASC, NEXT_FIRE_TIME ASC, TRIGGER_STATE ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);
CREATE INDEX MALLORDER.IDX_QRTZ_T_NFT_ST_MISFIRE_GRP ON MALLORDER.QRTZ_TRIGGERS (SCHED_NAME ASC, MISFIRE_INSTR ASC, NEXT_FIRE_TIME ASC, TRIGGER_GROUP ASC, TRIGGER_STATE ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);
CREATE INDEX MALLORDER.IDX_QRTZ_T_N_G_STATE ON MALLORDER.QRTZ_TRIGGERS (SCHED_NAME ASC, TRIGGER_GROUP ASC, TRIGGER_STATE ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);
CREATE INDEX MALLORDER.IDX_QRTZ_T_N_STATE ON MALLORDER.QRTZ_TRIGGERS (SCHED_NAME ASC, TRIGGER_NAME ASC, TRIGGER_GROUP ASC, TRIGGER_STATE ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);
CREATE INDEX MALLORDER.IDX_QRTZ_T_STATE ON MALLORDER.QRTZ_TRIGGERS (SCHED_NAME ASC, TRIGGER_STATE ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);

-- ----------------------------
--  Primary key structure for table QRTZ_SIMPLE_TRIGGERS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_SIMPLE_TRIGGERS" ADD CONSTRAINT "QRTZ_SIMPLE_TRIG_PK" PRIMARY KEY("SCHED_NAME","TRIGGER_NAME","TRIGGER_GROUP");

-- ----------------------------
--  Checks structure for table QRTZ_SIMPLE_TRIGGERS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_SIMPLE_TRIGGERS" ADD CONSTRAINT "SYS_C0043850" CHECK ("SCHED_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043851" CHECK ("TRIGGER_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043852" CHECK ("TRIGGER_GROUP" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043853" CHECK ("REPEAT_COUNT" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043854" CHECK ("REPEAT_INTERVAL" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043855" CHECK ("TIMES_TRIGGERED" IS NOT NULL) ENABLE;

-- ----------------------------
--  Primary key structure for table QRTZ_CRON_TRIGGERS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_CRON_TRIGGERS" ADD CONSTRAINT "QRTZ_CRON_TRIG_PK" PRIMARY KEY("SCHED_NAME","TRIGGER_NAME","TRIGGER_GROUP");

-- ----------------------------
--  Checks structure for table QRTZ_CRON_TRIGGERS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_CRON_TRIGGERS" ADD CONSTRAINT "SYS_C0043858" CHECK ("SCHED_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043859" CHECK ("TRIGGER_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043860" CHECK ("TRIGGER_GROUP" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043861" CHECK ("CRON_EXPRESSION" IS NOT NULL) ENABLE;

-- ----------------------------
--  Primary key structure for table QRTZ_SIMPROP_TRIGGERS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_SIMPROP_TRIGGERS" ADD CONSTRAINT "QRTZ_SIMPROP_TRIG_PK" PRIMARY KEY("SCHED_NAME","TRIGGER_NAME","TRIGGER_GROUP");

-- ----------------------------
--  Checks structure for table QRTZ_SIMPROP_TRIGGERS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_SIMPROP_TRIGGERS" ADD CONSTRAINT "SYS_C0043864" CHECK ("SCHED_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043865" CHECK ("TRIGGER_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043866" CHECK ("TRIGGER_GROUP" IS NOT NULL) ENABLE;

-- ----------------------------
--  Primary key structure for table QRTZ_BLOB_TRIGGERS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_BLOB_TRIGGERS" ADD CONSTRAINT "QRTZ_BLOB_TRIG_PK" PRIMARY KEY("SCHED_NAME","TRIGGER_NAME","TRIGGER_GROUP");

-- ----------------------------
--  Checks structure for table QRTZ_BLOB_TRIGGERS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_BLOB_TRIGGERS" ADD CONSTRAINT "SYS_C0043869" CHECK ("SCHED_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043870" CHECK ("TRIGGER_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043871" CHECK ("TRIGGER_GROUP" IS NOT NULL) ENABLE;

-- ----------------------------
--  Primary key structure for table QRTZ_CALENDARS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_CALENDARS" ADD CONSTRAINT "QRTZ_CALENDARS_PK" PRIMARY KEY("SCHED_NAME","CALENDAR_NAME");

-- ----------------------------
--  Checks structure for table QRTZ_CALENDARS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_CALENDARS" ADD CONSTRAINT "SYS_C0043874" CHECK ("SCHED_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043875" CHECK ("CALENDAR_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043876" CHECK ("CALENDAR" IS NOT NULL) ENABLE;

-- ----------------------------
--  Primary key structure for table QRTZ_PAUSED_TRIGGER_GRPS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_PAUSED_TRIGGER_GRPS" ADD CONSTRAINT "QRTZ_PAUSED_TRIG_GRPS_PK" PRIMARY KEY("SCHED_NAME","TRIGGER_GROUP");

-- ----------------------------
--  Checks structure for table QRTZ_PAUSED_TRIGGER_GRPS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_PAUSED_TRIGGER_GRPS" ADD CONSTRAINT "SYS_C0043878" CHECK ("SCHED_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043879" CHECK ("TRIGGER_GROUP" IS NOT NULL) ENABLE;

-- ----------------------------
--  Primary key structure for table QRTZ_FIRED_TRIGGERS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_FIRED_TRIGGERS" ADD CONSTRAINT "QRTZ_FIRED_TRIGGER_PK" PRIMARY KEY("SCHED_NAME","ENTRY_ID");

-- ----------------------------
--  Checks structure for table QRTZ_FIRED_TRIGGERS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_FIRED_TRIGGERS" ADD CONSTRAINT "SYS_C0043881" CHECK ("SCHED_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043882" CHECK ("ENTRY_ID" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043883" CHECK ("TRIGGER_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043884" CHECK ("TRIGGER_GROUP" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043885" CHECK ("INSTANCE_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043886" CHECK ("FIRED_TIME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043887" CHECK ("SCHED_TIME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043888" CHECK ("PRIORITY" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043889" CHECK ("STATE" IS NOT NULL) ENABLE;

-- ----------------------------
--  Indexes structure for table QRTZ_FIRED_TRIGGERS
-- ----------------------------
CREATE INDEX MALLORDER.IDX_QRTZ_FT_INST_JOB_REQ_RCVRY ON MALLORDER.QRTZ_FIRED_TRIGGERS (SCHED_NAME ASC, INSTANCE_NAME ASC, REQUESTS_RECOVERY ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);
CREATE INDEX MALLORDER.IDX_QRTZ_FT_JG ON MALLORDER.QRTZ_FIRED_TRIGGERS (SCHED_NAME ASC, JOB_GROUP ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);
CREATE INDEX MALLORDER.IDX_QRTZ_FT_J_G ON MALLORDER.QRTZ_FIRED_TRIGGERS (SCHED_NAME ASC, JOB_NAME ASC, JOB_GROUP ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);
CREATE INDEX MALLORDER.IDX_QRTZ_FT_TG ON MALLORDER.QRTZ_FIRED_TRIGGERS (SCHED_NAME ASC, TRIGGER_GROUP ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);
CREATE INDEX MALLORDER.IDX_QRTZ_FT_TRIG_INST_NAME ON MALLORDER.QRTZ_FIRED_TRIGGERS (SCHED_NAME ASC, INSTANCE_NAME ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);
CREATE INDEX MALLORDER.IDX_QRTZ_FT_T_G ON MALLORDER.QRTZ_FIRED_TRIGGERS (SCHED_NAME ASC, TRIGGER_NAME ASC, TRIGGER_GROUP ASC) TABLESPACE XWMALL LOGGING VISIBLE PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645);

-- ----------------------------
--  Primary key structure for table QRTZ_SCHEDULER_STATE
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_SCHEDULER_STATE" ADD CONSTRAINT "QRTZ_SCHEDULER_STATE_PK" PRIMARY KEY("SCHED_NAME","INSTANCE_NAME");

-- ----------------------------
--  Checks structure for table QRTZ_SCHEDULER_STATE
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_SCHEDULER_STATE" ADD CONSTRAINT "SYS_C0043891" CHECK ("SCHED_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043892" CHECK ("INSTANCE_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043893" CHECK ("LAST_CHECKIN_TIME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043894" CHECK ("CHECKIN_INTERVAL" IS NOT NULL) ENABLE;

-- ----------------------------
--  Primary key structure for table QRTZ_LOCKS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_LOCKS" ADD CONSTRAINT "QRTZ_LOCKS_PK" PRIMARY KEY("SCHED_NAME","LOCK_NAME");

-- ----------------------------
--  Checks structure for table QRTZ_LOCKS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_LOCKS" ADD CONSTRAINT "SYS_C0043896" CHECK ("SCHED_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043897" CHECK ("LOCK_NAME" IS NOT NULL) ENABLE;

-- ----------------------------
--  Primary key structure for table T_USER
-- ----------------------------
ALTER TABLE "MALLORDER"."T_USER" ADD CONSTRAINT "SYS_C0043063" PRIMARY KEY("F_ID");

-- ----------------------------
--  Uniques structure for table T_USER
-- ----------------------------
ALTER TABLE "MALLORDER"."T_USER" ADD CONSTRAINT "T_USER_LOGIN_NAME_ONLY" UNIQUE ("F_LOGIN_NAME") ENABLE;

-- ----------------------------
--  Checks structure for table T_USER
-- ----------------------------
ALTER TABLE "MALLORDER"."T_USER" ADD CONSTRAINT "SYS_C0043058" CHECK ("F_ID" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043059" CHECK ("F_LOGIN_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043060" CHECK ("F_PASSWORD" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043061" CHECK ("F_SALT" IS NOT NULL) ENABLE;

-- ----------------------------
--  Primary key structure for table T_ROLE
-- ----------------------------
ALTER TABLE "MALLORDER"."T_ROLE" ADD CONSTRAINT "SYS_C0043066" PRIMARY KEY("F_ID");

-- ----------------------------
--  Uniques structure for table T_ROLE
-- ----------------------------
ALTER TABLE "MALLORDER"."T_ROLE" ADD CONSTRAINT "T_ROLE_CODE_ONLY" UNIQUE ("F_CODE") ENABLE;

-- ----------------------------
--  Checks structure for table T_ROLE
-- ----------------------------
ALTER TABLE "MALLORDER"."T_ROLE" ADD CONSTRAINT "SYS_C0043064" CHECK ("F_ID" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043065" CHECK ("F_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043341" CHECK ("F_CODE" IS NOT NULL) ENABLE;

-- ----------------------------
--  Primary key structure for table T_RESOURCE
-- ----------------------------
ALTER TABLE "MALLORDER"."T_RESOURCE" ADD CONSTRAINT "SYS_C0043070" PRIMARY KEY("F_ID");

-- ----------------------------
--  Checks structure for table T_RESOURCE
-- ----------------------------
ALTER TABLE "MALLORDER"."T_RESOURCE" ADD CONSTRAINT "SYS_C0043067" CHECK ("F_ID" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043068" CHECK ("F_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043069" CHECK ("F_TYPE" IS NOT NULL) ENABLE;

-- ----------------------------
--  Primary key structure for table T_ORGANIZATION
-- ----------------------------
ALTER TABLE "MALLORDER"."T_ORGANIZATION" ADD CONSTRAINT "SYS_C0043073" PRIMARY KEY("F_ID");

-- ----------------------------
--  Checks structure for table T_ORGANIZATION
-- ----------------------------
ALTER TABLE "MALLORDER"."T_ORGANIZATION" ADD CONSTRAINT "SYS_C0043071" CHECK ("F_ID" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043072" CHECK ("F_NAME" IS NOT NULL) ENABLE;

-- ----------------------------
--  Primary key structure for table T_APP
-- ----------------------------
ALTER TABLE "MALLORDER"."T_APP" ADD CONSTRAINT "SYS_C0043077" PRIMARY KEY("F_ID");

-- ----------------------------
--  Uniques structure for table T_APP
-- ----------------------------
ALTER TABLE "MALLORDER"."T_APP" ADD CONSTRAINT "T_APP_CODE_ONLY" UNIQUE ("F_CODE") ENABLE;

-- ----------------------------
--  Checks structure for table T_APP
-- ----------------------------
ALTER TABLE "MALLORDER"."T_APP" ADD CONSTRAINT "SYS_C0043074" CHECK ("F_ID" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043075" CHECK ("F_CODE" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043076" CHECK ("F_SECRET" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043090" CHECK ("F_NAME" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043091" CHECK ("F_URL" IS NOT NULL) ENABLE;

-- ----------------------------
--  Primary key structure for table T_ROLE_RESOURCE
-- ----------------------------
ALTER TABLE "MALLORDER"."T_ROLE_RESOURCE" ADD CONSTRAINT "SYS_C0043080" PRIMARY KEY("F_ROLE_ID","F_RESOURCE_ID");

-- ----------------------------
--  Checks structure for table T_ROLE_RESOURCE
-- ----------------------------
ALTER TABLE "MALLORDER"."T_ROLE_RESOURCE" ADD CONSTRAINT "SYS_C0043078" CHECK ("F_ROLE_ID" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043079" CHECK ("F_RESOURCE_ID" IS NOT NULL) ENABLE;

-- ----------------------------
--  Primary key structure for table T_USER_ROLE
-- ----------------------------
ALTER TABLE "MALLORDER"."T_USER_ROLE" ADD CONSTRAINT "SYS_C0043083" PRIMARY KEY("F_USER_ID","F_ROLE_ID");

-- ----------------------------
--  Checks structure for table T_USER_ROLE
-- ----------------------------
ALTER TABLE "MALLORDER"."T_USER_ROLE" ADD CONSTRAINT "SYS_C0043081" CHECK ("F_USER_ID" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043082" CHECK ("F_ROLE_ID" IS NOT NULL) ENABLE;

-- ----------------------------
--  Primary key structure for table T_USER_ORGANIZATION
-- ----------------------------
ALTER TABLE "MALLORDER"."T_USER_ORGANIZATION" ADD CONSTRAINT "SYS_C0043086" PRIMARY KEY("F_USER_ID","F_PRGANIZATION_ID");

-- ----------------------------
--  Checks structure for table T_USER_ORGANIZATION
-- ----------------------------
ALTER TABLE "MALLORDER"."T_USER_ORGANIZATION" ADD CONSTRAINT "SYS_C0043084" CHECK ("F_USER_ID" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0043085" CHECK ("F_PRGANIZATION_ID" IS NOT NULL) ENABLE;

-- ----------------------------
--  Foreign keys structure for table QRTZ_TRIGGERS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_TRIGGERS" ADD CONSTRAINT "QRTZ_TRIGGER_TO_JOBS_FK" FOREIGN KEY ("SCHED_NAME", "JOB_NAME", "JOB_GROUP") REFERENCES "MALLORDER"."QRTZ_JOB_DETAILS" ("SCHED_NAME", "JOB_NAME", "JOB_GROUP") ENABLE;

-- ----------------------------
--  Foreign keys structure for table QRTZ_SIMPLE_TRIGGERS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_SIMPLE_TRIGGERS" ADD CONSTRAINT "QRTZ_SIMPLE_TRIG_TO_TRIG_FK" FOREIGN KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") REFERENCES "MALLORDER"."QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE;

-- ----------------------------
--  Foreign keys structure for table QRTZ_CRON_TRIGGERS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_CRON_TRIGGERS" ADD CONSTRAINT "QRTZ_CRON_TRIG_TO_TRIG_FK" FOREIGN KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") REFERENCES "MALLORDER"."QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE;

-- ----------------------------
--  Foreign keys structure for table QRTZ_SIMPROP_TRIGGERS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_SIMPROP_TRIGGERS" ADD CONSTRAINT "QRTZ_SIMPROP_TRIG_TO_TRIG_FK" FOREIGN KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") REFERENCES "MALLORDER"."QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE;

-- ----------------------------
--  Foreign keys structure for table QRTZ_BLOB_TRIGGERS
-- ----------------------------
ALTER TABLE "MALLORDER"."QRTZ_BLOB_TRIGGERS" ADD CONSTRAINT "QRTZ_BLOB_TRIG_TO_TRIG_FK" FOREIGN KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") REFERENCES "MALLORDER"."QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE;

