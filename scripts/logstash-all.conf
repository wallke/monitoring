input {
  redis {
  batch_count => 200 #EVAL命令返回的事件数目
  data_type => "list" #logstash redis插件工作方式
  key => "filebeat" #监听的键值
  host => "127.0.0.1" #redis地址
  port => 6379 #redis端口号
  #password => "123qwe" #如果有安全认证，此项为密码
  db => 0 #redis数据库的编号
  threads => 50 #启用线程数量
  #tags =>"test"
  }
}
  filter {

  if "application" == [fields][log_source] {

    if "transaction"  in [message] {
  	grok {
	    #patterns_dir => "/usr/local/logstash/patterns"
     	    match => {
		"message" => "(?m)%{DATA:log_type}\u0001%{DATA:log_ver}\u0001%{DATA:system}\u0001%{DATA:ver}\u0001%{DATA:envir_ID}\u0001%{DATA:time}\u0001%{NUMBER:interval:float}\u0001%{DATA:status}\u0001%{DATA:result_type}\u0001%{DATA:result_info}\u0001%{DATA:service_ID}\u0001%{DATA:node_ID}\u0001%{DATA:node_code}\u0001%{DATA:last_node_ID}\u0001%{DATA:last_node_code}\u0001%{DATA:server_ip}\u0001%{DATA:server_port}\u0001%{DATA:last_system}\u0001%{DATA:last_ver}\u0001%{DATA:invoke_node_ID}\u0001%{DATA:invoke_node_code}\u0001%{DATA:mode}\u0001%{DATA:client_type}\u0001%{DATA:client_ip}\u0001%{DATA:client_port}\u0001%{DATA:client_info}\u0001%{GREEDYDATA:custm_property}"
	       }
          remove_field => ["message"]

  	}

	date{
              match => ["time","yyyyMMddHHmmssSSS"]
	      locale => "en"
	      target => ["time"]
	}

        if [client_info] {  #如果标签存在，则继续解析数据，如果不判断会出现_grokparsefailure
	   grok {
	       #patterns_dir => "/usr/local/logstash/patterns"
                match => {
	       "client_info" => "(?m)%{DATA:phone}\u0002%{DATA:channel}\u0002%{DATA:internet}\u0002%{DATA:client_ver}\u0002%{DATA:screen}\u0002%{DATA:imei}\u0002%{DATA:imsi}\u0002%{DATA:request_time}\u0002%{DATA:response_time}\u0002%{DATA:brand}\u0002%{GREEDYDATA:city}"
	        }
	     }

	     date{
                  match => ["request_time","yyyyMMddHHmmssSSS"]
	          locale => "en"
	          target => ["request_time"]
		}

	     date{
                  match => ["response_time","yyyyMMddHHmmssSSS"]
	          locale => "en"
	          target => ["response_time"]
		}
            }


    } else if "chain"  in [message] {

         grok {

	    #patterns_dir => "/usr/local/logstash/patterns"
		    #last_system和system进行对换是由于为了方便统计异常等信息
     	    match => {
		"message" => "(?m)%{DATA:log_type}\u0001%{DATA:log_ver}\u0001%{DATA:last_system}\u0001%{DATA:system}\u0001%{DATA:time}\u0001%{NUMBER:interval:float}\u0001%{DATA:status}\u0001%{DATA:result_type}\u0001%{DATA:result_info}\u0001%{DATA:service_ID}\u0001%{DATA:node_code}\u0001%{DATA:last_node_ID}\u0001%{DATA:last_node_code}\u0001%{DATA:invoke_node_ID}\u0001%{DATA:invoke_node_code}\u0001%{DATA:server_ip}\u0001%{GREEDYDATA:server_port}"
	       }
          remove_field => ["message"]

  	}

	date{
              match => ["time","yyyyMMddHHmmssSSS"]
	      locale => "en"
	      target => ["time"]
	}

    } else if "method"  in [message] {

          grok {

	    #patterns_dir => "/usr/local/logstash/patterns"
     	    match => {
		"message" => "(?m)%{DATA:log_type}\u0001%{DATA:log_ver}\u0001%{DATA:system}\u0001%{DATA:ver}\u0001%{DATA:envir_ID}\u0001%{DATA:time}\u0001%{NUMBER:interval:float}\u0001%{DATA:status}\u0001%{DATA:result_type}\u0001%{DATA:result_info}\u0001%{DATA:service_ID}\u0001%{DATA:node_ID}\u0001%{DATA:node_code}\u0001%{DATA:last_node_ID}\u0001%{DATA:last_node_code}\u0001%{DATA:server_ip}\u0001%{GREEDYDATA:server_port}"
	       }
          remove_field => ["message"]
  	}

	date{
              match => ["time","yyyyMMddHHmmssSSS"]
	      locale => "en"
	      target => ["time"]
	}
     } else if "appcrash"  in [message] {
          grok {
	    #patterns_dir => "/usr/local/logstash/patterns"
     	    match => {
		"message" => "(?m)%{DATA:log_type}\u0001%{DATA:log_ver}\u0001%{DATA:system}\u0001%{DATA:ver}\u0001%{DATA:techType}\u0001%{DATA:deviceType}\u0001%{DATA:resolution}\u0001%{DATA:osVer}\u0001%{DATA:appID}\u0001%{DATA:network}\u0001%{DATA:date}\u0001%{DATA:module}\u0001%{GREEDYDATA:module_info}"
	       }
          remove_field => ["message"]
  	}

	date{
              match => ["date","yyyyMMddHHmmss"]
	      locale => "en"
	      target => ["time"]
	}
     }
   }
  if "systemInfo" == [fields][log_source] {
  
    if "z_os"  in [message] {
  	grok { 
	    #patterns_dir => "/usr/local/logstash/patterns"
     	    match => {
		"message" => "%{DATA:log_type}\u0001%{DATA:host_ip}\u0001%{DATA:time}\u0001%{DATA:hostname}\u0001%{DATA:host_boot_time}\u0001%{DATA:uptime}\u0001%{DATA:sys_info}\u0001%{NUMBER:sys_processes:int}\u0001%{NUMBER:running_processes:int}"
	       }
          remove_field => ["message"]

  	}
	date{
              match => ["time","yyyyMMddHHmmssSSS"]
	      locale => "en"
	      target => ["time"]
	}
			
    } else if "z_host"  in [message] {

         grok {

	    #patterns_dir => "/usr/local/logstash/patterns"
     	    match => {
		"message" => "(?m)%{DATA:log_type}\u0001%{DATA:host_ip}\u0001%{DATA:time}\u0001%{DATA:processor_load_1}\u0001%{NUMBER:processor_load_5:float}\u0001%{DATA:processor_load_15}\u0001%{DATA:context_switches}\u0001%{DATA:Interrupts}\u0001%{DATA:user_time}\u0001%{DATA:Iowait_time}\u0001%{DATA:nice_time}\u0001%{DATA:system_time}\u0001%{DATA:softirq_time}\u0001%{DATA:steal_time}\u0001%{DATA:interrupt_time}\u0001%{DATA:idle_time}\u0001%{NUMBER:available_memory:float}\u0001%{DATA:free_swap_space}\u0001%{DATA:free_swap_space_per}\u0001%{NUMBER:total_memory:float}\u0001%{DATA:total_swap_space}\u0001%{NUMBER:incoming:int}\u0001%{NUMBER:outgoing:int}\u0001%{DATA:free_disk}\u0001%{NUMBER:free_disk_per:float}\u0001%{DATA:free_inodes}\u0001%{DATA:totall_disk}\u0001%{GREEDYDATA:used_disk}"
	       }
          remove_field => ["message"]

  	}
	date{
              match => ["time","yyyyMMddHHmmssSSS"]
	      locale => "en"
	      target => ["time"]
	}
   
    } else if "z_redis"  in [message] {

          grok {
	    #patterns_dir => "/usr/local/logstash/patterns"
     	    match => {
		"message" => "(?m)%{DATA:log_type}\u0001%{DATA:host_ip}\u0001%{DATA:time}\u0001%{NUMBER:used_memory:int}\u0001%{NUMBER:used_memory_peak:int}\u0001%{NUMBER:used_memory_lua:int}\u0001%{NUMBER:mem_fragmentation_ratio:float}\u0001%{NUMBER:connected_clients:int}\u0001%{NUMBER:client_longest_output_list:float}\u0001%{NUMBER:client_biggest_input_buf:int}\u0001%{NUMBER:blocked_clients:int}\u0001%{NUMBER:used_cpu_sys:float}\u0001%{NUMBER:used_cpu_user:float}\u0001%{NUMBER:used_cpu_sys_children:float}\u0001%{NUMBER:used_cpu_user_children:float}\u0001%{NUMBER:total_connections_received:int}\u0001%{NUMBER:total_commands_processed:int}\u0001%{NUMBER:instantaneous_ops_per_sec:int}\u0001%{NUMBER:rejected_connections:int}\u0001%{NUMBER:expired_keys:int}\u0001%{NUMBER:evicted_keys:int}\u0001%{NUMBER:keyspace_hits:int}\u0001%{NUMBER:keyspace_misses:int}"
	       }
          remove_field => ["message"]
  	}
	date{
              match => ["time","yyyyMMddHHmmssSSS"]
	      locale => "en"
	      target => ["time"]
	}
     } else if "z_nginx"  in [message] {

         grok {
	    #patterns_dir => "/usr/local/logstash/patterns"
     	    match => {
		"message" => "(?m)%{DATA:log_type}\u0001%{DATA:host_ip}\u0001%{DATA:time}\u0001%{NUMBER:accepts:int}\u0001%{NUMBER:active:int}\u0001%{NUMBER:reading:int}\u0001%{NUMBER:waiting:int}\u0001%{NUMBER:writing:int}\u0001%{NUMBER:handled:int}\u0001%{NUMBER:requests:int}"
	       }
          remove_field => ["message"]
  	}
	date{
              match => ["time","yyyyMMddHHmmssSSS"]
	      locale => "en"
	      target => ["time"]
	}
       }
  }
 }
output {
   if ("_grokparsefailure" not in [tags]) and ("_groktimeout" not in [tags]) {

       if("z_os" == [log_type]){
           elasticsearch{
                hosts => ["10.19.241.51:9200"]
                index => "xwtec_system-%{+YYYY.MM.dd}"
	        document_type =>  "xwtec_system_os"         
              }	    
	  }else if ("z_host" == [log_type]){
             elasticsearch{
                hosts => ["10.19.241.51:9200"]
                index => "xwtec_system-%{+YYYY.MM.dd}"
	        document_type =>  "xwtec_system_host"         
              }
	  } else if ("z_redis" == [log_type]) {
	      elasticsearch{
                hosts => ["10.19.241.51:9200"]
                index => "xwtec_system-%{+YYYY.MM.dd}"
	        document_type =>  "xwtec_system_redis"         
              }
	 }   else if ("z_nginx" == [log_type]) {
	      elasticsearch{
               hosts => ["10.19.241.51:9200"]
                index => "xwtec_system-%{+YYYY.MM.dd}"
	        document_type =>  "xwtec_system_nginx"         
              }
	 } else  if("transaction" == [log_type]){
           elasticsearch{
                 hosts => ["10.19.241.51:9200"]
                index => "xwtec_application-%{+YYYY.MM.dd}"
	        document_type =>  "xwtec_application_transaction"         
              }	    
	  }else if ("chain" == [log_type]){
             elasticsearch{
                hosts => ["10.19.241.51:9200"]
                index => "xwtec_application-%{+YYYY.MM.dd}"
	        document_type =>  "xwtec_application_chain"         
              }
	  } else if ("method" == [log_type]){
	      elasticsearch{
                hosts => ["10.19.241.51:9200"]
                index => "xwtec_application-%{+YYYY.MM.dd}"
	        document_type =>  "xwtec_application_method"         
              }
	  } else if ("appcrash" == [log_type]){
	      elasticsearch{
                hosts => ["10.19.241.51:9200"]
                index => "xwtec_application-%{+YYYY.MM.dd}"
	        document_type =>  "xwtec_application_appcrash"         
              }
	  }     
       # stdout { codec => rubydebug}
    }
}